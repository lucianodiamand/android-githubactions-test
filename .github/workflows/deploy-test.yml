name: Build and Deploy
on:
    push:
        tags:
            - '*'
        branches:
            -   main

jobs:
    build:
        name: Build and Deploy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set up JDK 1.8
              uses: actions/setup-java@v3
              with:
                distribution: 'zulu'
                java-version: 8
            - name: Make gradlew executable
              run: chmod +x ./gradlew
            - name: Update Username from Secrets
              env:
                API_URL: ${{ secrets.BASE_URL_DEV }}
              run: echo API_URL="$API_URL" > ./local.properties
            - name: Setup Android SDK
              uses: android-actions/setup-android@v2

            - name: Build Example App! 
              run: ./gradlew --no-daemon build
    apk:
        name: Generate APK
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v1
            - name: Setup JDK
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Make gradlew executable
              run: chmod +x ./gradlew
            - name: Update Username from Secrets
              env:
                API_URL: ${{ secrets.BASE_URL_DEV }}
              run: echo API_URL="$API_URL" > ./local.properties
            - name: Build APK
              run: ./gradlew assembleDebug
            - name: Upload APK
              uses: actions/upload-artifact@v1
              with:
                  name: apk
                  path: app/build/outputs/apk/debug/app-debug.apk 
    release:
        name: Release APK
        needs: apk
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        steps:
            - name: Download APK from build
              uses: actions/download-artifact@v1
              with:
                  name: apk  
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }} 
            - name: Upload Release APK
              id: upload_release_asset
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: apk/app-debug.apk
                  asset_name: MensaApp.apk
                  asset_content_type: application/zip

